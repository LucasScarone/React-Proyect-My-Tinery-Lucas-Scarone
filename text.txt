 primero de todo una carpeta redux
 dentro de es carpeta otra mas para los acti0ons y reducer 
 creamos el archivo store dentrode la carpeta reduX 
 
 
 
 
 
 creamos el store

import { configureStore } from '@reduxjs/toolkit'


const store = {
    Cities : CitiesReducer
}

export default configureStore( {
    reducer: store
} )







despues se pone el Provider asi:
se importa:

el sstore para parametro

import store from "./redux/store";

el provider para que funcione las funcionalidades

import { Provider } from "react-redux";

afruera el

BrowserRuter

<Provider store={store}>
dentro el contenico
</Provider>

BrowserRuter










3 ahoraCREAMOS el archivo Cityreducer
dentro de reducers
y impotamos 
para crear 
 import { createReducer } from "@reduxjs/toolkit";

import { filterByName, load } from '../actions/championsActions'

y creamos la funcion reducer

const initialState = {

    para tener las 15 cuidades

    all: [],

    esto es para tener las cudades filtradas

    filtered: [],

    search no lo necesito

    search: ""
}





depues dejamos preparado el builder 


const reducer = createReducer( initialState, ( builder ) => {})




export default reducer




ahora conectamos el reducer importandolo an store
con:

import CityReducer from './reducers/CityReducer'



ahora voy al componente donde lo voy a usar en este caso seria City y caps home 

import para usar lo que tengo en el store y dispach para cambiar lo que tngo en el sotore
desde city o otro componente 

        eso para usar
            |           esto para despacahr cambios al reducer        
            |                   |
            |                   |
            |                   |
import { useSelector, useDispatch } from "react-redux";



const { all, filtered, search } = useSelector((store) => store.champions);








const reducer = createReducer( initialState, ( builder ) => {
    builder.addCase( load, ( state, action ) => {
        return { ...state, all: action.payload, filtered: action.payload }
    } ).addCase( filterByName, (state, action) => {
        const fnFilter = (champion) => champion.name.toLowerCase().startsWith(action.payload.toLowerCase()) 
        const aux = state.all.filter( fnFilter )
        return { ...state, filtered: aux, search: action.payload }
    })
} )














  reduc action
  import { createAction } from "@reduxjs/toolkit";

export const load = createAction( 'loadChampions', (champions) => {
    return {
        payload: champions
    }
} )

export const filterByName = createAction( 'filterByName', ( value ) =>{
    return {
        payload : value
    }
} )
  
  
  
  
  
  const inputBusqueda = useRef(null);

  const dispatch = useDispatch();

  const { all, filtered, search } = useSelector((store) => store.champions);

  useEffect(() => {
    if (all.length == 0) {
      getChampions().then((data) => {
        dispatch(load(data));
      });
    }
  }, []);

  const handleInput = () => {
    dispatch(filterByName(inputBusqueda.current.value));
  };

